name: golangci-lint
on:
  push:
    tags:
      - v*
    branches:
      - master
      - main
      - develop
  pull_request:
permissions:
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  pull-requests: read
jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.
          # args: --issues-exit-code=0

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          only-new-issues: true

          # Optional: if set to true then the action will use pre-installed Go.
          # skip-go-installation: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true
      -
        name: Publish status
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "GolangCI - Lint"
          username: 'GitHub Actions'
  tests:
    name: "Golang ${{ matrix.go-version }} ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        go-version: ['1.18']
        os: [ubuntu-latest]
    services:
      redis:
        image: "redis:alpine"
        ports:
          - "6379:6379"
      pgsql:
        image: "postgres:13.4"
        env:
          POSTGRES_PASSWORD: Pa33WoRD
          POSTGRES_USER: rss3
          POSTGRES_DB: pregod
        ports:
          - "5432:5432"
      mongo:
        image: "mongo:4.0"
        env:
          MONGO_INITDB_ROOT_USERNAME: rss3
          MONGO_INITDB_ROOT_PASSWORD: Pa33WoRD
        ports:
          - "27017:27017"
    env:
      CONFIG_ENV: local
      GOENV_VERSION: "${{ matrix.go-version }}"

    steps:
      - name: Check out code into Go module directory
        uses: actions/checkout@v2

      - name: Set up golang ${{ matrix.go-version }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Go mod package cache
        uses: actions/cache@v2
        with:
          path: $GOPATH/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}

      - name: Run tests
        run: |
          sh ./scripts/localtest.sh
