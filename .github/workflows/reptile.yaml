name: reptile build & deploy

on:
  push:
    branches:
      - 'reptile-gitcoin'


env:
  AWS_REGION: us-west-2
  IMAGE_NAME_REPTILE: rss3/pregod-reptile

jobs:
  build-reptile:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - name: docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.IMAGE_NAME_REPTILE }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: reptile.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      -
        name: Publish status
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "Build Reptile"
          description: "Build RSS3-PreGod Reptile"
          username: 'GitHub Actions'

  deploy-dev:
    runs-on: ubuntu-latest
    needs: [build-reptile]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.IMAGE_NAME_REPTILE }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Replace image field
        uses: mikefarah/yq@master
        with:
          cmd: |
            yq -i '.spec.jobTemplate.spec.template.spec.containers[0].image = "${{ env.IMAGE_NAME_REPTILE }}:${{ steps.meta.outputs.version }}"' ./deploy/dev/cronjob-reptile.yaml
      - run: |
          aws eks update-kubeconfig --region us-west-2 --name production
          curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.21.5/bin/linux/amd64/kubectl && chmod +x kubectl && mv kubectl /usr/local/bin/kubectl
      - run: |
          kubectl apply -f ./deploy/dev/cronjob-reptile.yaml

  deploy-prod:
    runs-on: ubuntu-latest
    needs: deploy-dev
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.IMAGE_NAME_REPTILE }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Replace image field
        uses: mikefarah/yq@master
        with:
          cmd: |
            yq -i '.spec.jobTemplate.spec.template.spec.containers[0].image = "${{ env.IMAGE_NAME_REPTILE }}:${{ steps.meta.outputs.version }}"' ./deploy/prod/cronjob-reptile.yaml
      - run: |
          aws eks update-kubeconfig --region us-west-2 --name production
          curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.21.5/bin/linux/amd64/kubectl && chmod +x kubectl && mv kubectl /usr/local/bin/kubectl
      - run: |
          kubectl apply -f deploy/prod/cronjob-reptile.yaml
