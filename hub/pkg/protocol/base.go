package protocol

const (
	Version = "v0.4.0"
)

type Base struct {
	Version     string `json:"version"`      // Proposal version for current file. It should be like `v1.0.0`
	Identifier  string `json:"identifier"`   // RSS3 URI
	DateUpdated string `json:"date_updated"` // Specifies the published date in RFC 3339 format
}

type SignedBase struct {
	Base

	// Signed by instance's private key, the signature message is JSON string sorted by key alphabet:
	// `[RSS3] I am confirming the results of changes to my file ${identifier}: JSON.stringify(file, Object.keys(file).sort())`
	Signature string  `json:"signature"`
	Agents    []Agent `json:"agents,omitempty"`
}

type UnsignedBase struct {
	Base

	Auto bool `json:"auto"`
}

type ListSignedBase struct {
	SignedBase

	IdentifierNext string `json:"identifier_next,omitempty"`
}

type ListUnsignedBase struct {
	UnsignedBase

	IdentifierNext string `json:"identifier_next,omitempty"`
}

type Agent struct {
	Pubkey        string `json:"pubkey"`    // A random ed25519 public key generated by the client.
	Signature     string `json:"signature"` // A signature signed by pubkey's private key, the message is the same as `signature`.
	App           string `json:"app"`       // Name of the app using this agent, eg: `Revery`.
	Authorization string `json:"authorization"`
	DateExpired   string `json:"date_expired"`
}
